package corejavapackage;

//class O00020_Filehandling {
//
//	public static void main(String[] args) {
//		String txtFileName = "C:/My/P/Study/CoreJava/C2ImportCalEventSample.csv";
//
//		try (Stream<String> stream = Files.lines(Paths.get(txtFileName))) {
//
//			stream.forEach(System.out::println);
//
//		} catch (IOException ioe) {
//			ioe.printStackTrace();
//		}
//
//	}
//}
//========================

//public class O00020_Filehandling {
//
//	public static void main(String[] args) {
//
//		String txtFileName = "C:/My/P/Study/CoreJava/C2ImportCalEventSample.csv";
//		List<String> list = new ArrayList<>();
//
//		// reading csv file into stream, try-with-resources
//		try (Stream<String> stream = Files.lines(Paths.get(txtFileName))) {
//
//			// 1 filtered flight numbers BA-731 and VA-421
//			// 2. then only map filtered result to there airport names only
//			// 3. store result into a List
//			list = stream.filter(line -> line.contains("814-555-5179")).map(line -> {
//				String[] str = line.split(",");
//				return str[2];
//			}).collect(Collectors.toList());
//
//			// 4. print result list
//			list.forEach(System.out::println);
//
//		} catch (IOException ioe) {
//			ioe.printStackTrace();
//		}
//
//	}
//
//}

//=================
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

public class O00020_Filehandling {

	public static void main(String[] args) {
		PDDocument pd;
		BufferedWriter wr;
		try {
			File input = new File("C://My//P//Study//CoreJava//Sample_CV.pdf"); // The PDF file from where you would
																				// like to extract
			File output = new File("C://My//P//Study//CoreJava//SampleText.txt"); // The text file where you are going
																					// to store the extracted
			// data
			pd = PDDocument.load(input);
			System.out.println(pd.getNumberOfPages());
			System.out.println(pd.isEncrypted());
			pd.save("CopyOfInvoice.pdf"); // Creates a copy called "CopyOfInvoice.pdf"
			PDFTextStripper stripper = new PDFTextStripper();
			wr = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(output)));
			stripper.writeText(pd, wr);
			if (pd != null) {
				pd.close();
			}
			// I use close() to flush the stream.
			wr.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}